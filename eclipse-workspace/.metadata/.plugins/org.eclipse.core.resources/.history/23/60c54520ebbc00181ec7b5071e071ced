package compositor;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;

import javax.swing.BorderFactory;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.border.Border;
import javax.swing.border.MatteBorder;
import javax.swing.border.TitledBorder;

public class PentagramPanel  extends JPanel{

	public void initializeComponent() {
		Border lineaCyan = BorderFactory.createLineBorder(Color.CYAN);
		TitledBorder titlePentagram = BorderFactory.createTitledBorder(lineaCyan, "Pentagrama");
		titlePentagram.setTitleJustification(TitledBorder.CENTER);
		titlePentagram.setTitleColor(Color.CYAN);
		this.setBorder(titlePentagram);
	}
	
	public void drawGrid() {
		setLayout(new GridBagLayout());

        GridBagConstraints gbc = new GridBagConstraints();
        for (int row = 0; row < 15; row++) {
            for (int col = 0; col < 15; col++) {
                gbc.gridx = col;
                gbc.gridy = row;

                //CellPane cellPane = new CellPane();
                JPanel cellPane = new JPanel();
                Border border = null;
                if (row < 4) {
                    if (col < 4) {
                        border = new MatteBorder(1, 1, 0, 0, Color.GRAY);
                    } else {
                        border = new MatteBorder(1, 1, 0, 1, Color.GRAY);
                    }
                } else {
                    if (col < 4) {
                        border = new MatteBorder(1, 1, 1, 0, Color.GRAY);
                    } else {
                        border = new MatteBorder(1, 1, 1, 1, Color.GRAY);
                    }
                }
                cellPane.setBorder(border);
                add(cellPane, gbc);
            }
        }
	}

}
